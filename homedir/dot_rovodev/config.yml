version: 1

agent:
  # Additional system prompt to append to the agent's default system prompt
  additionalSystemPrompt: >
    MANDATORY SYSTEM PROMPT FILE READING REQUIREMENTS:

    MANDATORY: Use expand_code_chunks [[0, -1]] for: AGENTS.md, .ai/core.md

    COMPLETE READING ENFORCEMENT FOR SYSTEM PROMPT FILES:
    - You MUST read the above system prompt files completely, regardless of length
    - If ANY tool output for these specific files is truncated (indicated by "..." or content cutting off), you MUST immediately make additional tool calls to read the missing portions
    - NEVER proceed with analysis until you have verified you've read every single line of these mandatory system prompt files
    - Always state the exact line range you actually saw for these files (e.g., "I read lines 0-674 of 935 total lines")
    - If you claim to have read a "complete" system prompt file, you must have seen the final line number that matches the total file length
    - For system prompt files over 1000 lines, use multiple expand_code_chunks calls with specific line ranges to ensure complete coverage
    - Truncated mandatory system prompt file reads are considered critical errors - you must resolve them before continuing

    TRUNCATION DETECTION AND RESPONSE FOR SYSTEM PROMPT FILES:
    - When tool outputs for system prompt files end abruptly or show "..." treat this as incomplete data
    - Immediately acknowledge: "The system prompt file output was truncated at line X, I need to read the remaining lines Y-Z"
    - Make follow-up tool calls to complete the reading of system prompt files before making any claims about their contents
    - Never assume or extrapolate content beyond what was actually displayed in system prompt file tool outputs

    PRECISION IN REPORTING SYSTEM PROMPT FILES:
    - Always report exactly what you observed from system prompt files: "I saw lines 0-674" not "I read the complete file"
    - Distinguish between partial reads and complete reads explicitly for system prompt files
    - If you make claims about system prompt file contents, you must have actually seen those specific lines
    - When referencing system prompt file information, cite the specific line numbers you actually viewed

    Note: These requirements apply ONLY to the mandatory system prompt files listed above, not to other project files.

  # Enable streaming responses from the AI model
  streaming: true
  # Temperature setting for AI model responses (0.0-1.0)
  temperature: 0.5 # default is 0.3
  # modelId: gpt-5-2025-08-07
  # modelId: claude-sonnet-4@20250514
  modelId: gpt-5-2025-08-07
  experimental:
    # Enable/disable the agent to run in shadow mode. This will run the agent on
    # a temporary clone of your workspace, prompting you before any changes are
    # applied to your working directory.
    enableShadowMode: false
  # Enable the deep planning tool for complex task planning
  enableDeepPlanTool: true

atlassianConnections:
  # Global jira projects user is part of
  jiraProjects: []
  # Directory where any local overrides are stored
  localOverridePath: .rovodev/atlassian_connections.json
  # Whether atlassian integration is enabled
  enabled: false
  # Editing mode for the prompt session
  editingMode: EMACS
  # Maximum width of the console output in characters, or 'fill' to fill the
  # terminal width
  maxOutputWidth: 120

sessions:
  # Automatically restore the last active session on startup
  autoRestore: true
  # Directory where session data is stored
  persistenceDir: ~/.rovodev/sessions

console:
  # Output format for console display (markdown, simple, or raw)
  outputFormat: markdown
  # Show tool execution results in the console
  showToolResults: true

logging:
  # Path to the log file
  path: ~/.rovodev/rovodev.log

mcp:
  # Path to the MCP (Model Context Protocol) configuration file
  mcpConfigPath: ~/.rovodev/mcp.json

toolPermissions:
  allowAll: true
  # Default permission for tools not explicitly listed
  default: allow
  # Permission settings for specific tools
  tools:
    create_file: allow
    delete_file: allow
    find_and_replace_code: allow
    open_files: allow
    expand_code_chunks: allow
    expand_folder: allow
    grep_file_content: allow
    grep_file_paths: allow
    getAccessibleAtlassianResources: deny
    getConfluenceSpaces: deny
    getConfluencePages: deny
    getPagesInConfluenceSpace: deny
    getConfluencePageAncestors: deny
    getConfluencePageFooterComments: deny
    getConfluencePageInlineComments: deny
    getConfluencePageDescendants: deny
    searchConfluenceUsingCql: deny
    getJiraIssue: deny
    getTransitionsForJiraIssue: deny
    lookupJiraAccountId: deny
    searchJiraIssuesUsingJql: deny
    getJiraIssueRemoteIssueLinks: deny
    getVisibleJiraProjects: deny
    getJiraProjectIssueTypesMetadata: deny
    createConfluencePage: deny
    updateConfluencePage: deny
    createConfluenceFooterComment: deny
    createConfluenceInlineComment: deny
    editJiraIssue: deny
    createJiraIssue: deny
    transitionJiraIssue: deny
    addCommentToJiraIssue: deny
    create_technical_plan: allow
    chrome_inject_script: allow
    chrome_console: allow
    chrome_navigate: allow
    chrome_screenshot: allow
    chrome_get_web_content: allow
    chrome_get_interactive_elements: allow
  bash:
    # Default permission for bash commands not explicitly listed
    default: allow
    # List of specific bash commands with their permission settings
    commands:
    - command: ls.*
      permission: allow
    - command: cat.*
      permission: allow
    - command: echo.*
      permission: allow
    - command: git status
      permission: allow
    - command: git diff.*
      permission: allow
    - command: git log.*
      permission: allow
    - command: pwd
      permission: allow
  # List of allowed MCP server names
  #### It does not use them anyway, so better let them soak
  allowedMcpServers:
  - http://host.docker.internal:12306/mcp
  - https://mcp.context7.com/mcp
